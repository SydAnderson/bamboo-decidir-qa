{
	"info": {
		"_postman_id": "ed1c5e08-a7b3-4204-bab1-f626183b786a",
		"name": "_Decidir Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3533300",
		"_collection_link": "https://blue-shuttle-187947.postman.co/workspace/bamboo~30aed206-c485-4f95-af32-3d5994a593b5/collection/3533300-ed1c5e08-a7b3-4204-bab1-f626183b786a?action=share&source=collection_link&creator=3533300"
	},
	"item": [
		{
			"name": "Decidir",
			"item": [
				{
					"name": "Domestico",
					"item": [
						{
							"name": "Visa Credito",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{VISA_CREDIT}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "02/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "123",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": [
												{
													"name": "getCostumer",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "default"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "default"
															}
														],
														"url": {
															"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"customer",
																"{{costumerId}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Mon, 11 Sep 2023 22:16:57 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Server",
															"value": "nginx/1.19.2"
														},
														{
															"key": "api-supported-versions",
															"value": "1"
														}
													],
													"cookie": [],
													"body": "{\n    \"Response\": {\n        \"CustomerId\": 252045,\n        \"Created\": \"2023-09-11T19:16:38.793\",\n        \"CommerceCustomerId\": null,\n        \"Owner\": \"Commerce\",\n        \"Email\": \"Nichole.Conroy53@example.org\",\n        \"Enabled\": true,\n        \"ShippingAddress\": null,\n        \"BillingAddress\": {\n            \"AddressId\": 375340,\n            \"AddressType\": 1,\n            \"Country\": \"BR\",\n            \"State\": \"SP\",\n            \"AddressDetail\": \"bla bla 10000\",\n            \"PostalCode\": null,\n            \"City\": \"MONTEVIDEO\"\n        },\n        \"Plans\": null,\n        \"AdditionalData\": null,\n        \"PaymentProfiles\": [\n            {\n                \"PaymentProfileId\": 256831,\n                \"PaymentMediaId\": 1,\n                \"Created\": \"2023-09-11T19:16:51.433\",\n                \"LastUpdate\": \"2023-09-11T19:16:51.433\",\n                \"Brand\": \"VISA\",\n                \"CardOwner\": \"Kate Barrows\",\n                \"Bin\": null,\n                \"IssuerBank\": \"Santander\",\n                \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                \"Type\": \"CreditCard\",\n                \"IdCommerceToken\": 42988,\n                \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                \"Expiration\": \"203002\",\n                \"Last4\": \"4905\",\n                \"Enabled\": true,\n                \"DocumentNumber\": \"False\",\n                \"DocumentTypeId\": 2,\n                \"ExternalValue\": null,\n                \"AffinityGroup\": null\n            }\n        ],\n        \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n        \"UniqueID\": \"UI_ab63ae7b-6856-4252-bf7b-736142cae61b\",\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252045\",\n        \"FirstName\": \"Cyrus\",\n        \"LastName\": \"Beer\",\n        \"DocNumber\": \"12345672\",\n        \"DocumentTypeId\": 4,\n        \"PhoneNumber\": \"256-352-0262\",\n        \"ExternalValue\": null\n    },\n    \"Errors\": []\n}"
												}
											]
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:09:55 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244000,\n        \"Created\": \"2023-09-11T19:09:47.230\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470182\",\n        \"Transaction\": {\n            \"TransactionID\": 1262893,\n            \"Created\": \"2023-09-11T19:09:47.230\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"190949\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.040\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.983\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"190949\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252037,\n            \"Created\": \"2023-09-11T19:09:44.587\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Zora.Green33@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256823,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:09:44.587\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Freddie McCullough\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252037\",\n            \"FirstName\": \"Gayle\",\n            \"LastName\": \"Emmerich\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"855-669-0497\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244000\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256823,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:14:26 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244000,\n        \"Created\": \"2023-09-11T19:09:47.230\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470182\",\n        \"Transaction\": {\n            \"TransactionID\": 1262893,\n            \"Created\": \"2023-09-11T19:09:47.230\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"190949\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.040\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.983\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"190949\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:54.997\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252037,\n            \"Created\": \"2023-09-11T19:09:44.587\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Zora.Green33@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256823,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:09:44.587\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Freddie McCullough\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252037\",\n            \"FirstName\": \"Gayle\",\n            \"LastName\": \"Emmerich\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"855-669-0497\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244011,\n                \"Created\": \"2023-09-11T19:12:39.103\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244013,\n                \"Created\": \"2023-09-11T19:14:25.593\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244000\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256823,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Credito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:17:49 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244014,\n        \"Created\": \"2023-09-11T22:17:45.803\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470665\",\n        \"Transaction\": {\n            \"TransactionID\": 1262906,\n            \"Created\": \"2023-09-11T22:17:45.803\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191748\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T22:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Meagan\",\n            \"LastName\": \"Harris\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"808-692-8622\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244014\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:19:35 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252045\",\n            \"FirstName\": \"Marian\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"288-546-0667\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:21:17 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:24:36 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Chester\",\n            \"LastName\": \"Toy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"537-425-7021\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244023,\n                \"Created\": \"2023-09-11T19:24:35.943\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"VISA_CREDIT\", \"4507990000004905\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Visa Debito",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{VISA_DEBIT}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "02/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "123",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": [
												{
													"name": "getCostumer",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "default"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "default"
															}
														],
														"url": {
															"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"customer",
																"{{costumerId}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Mon, 11 Sep 2023 22:28:29 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Server",
															"value": "nginx/1.19.2"
														},
														{
															"key": "api-supported-versions",
															"value": "1"
														}
													],
													"cookie": [],
													"body": "{\n    \"Response\": {\n        \"CustomerId\": 252052,\n        \"Created\": \"2023-09-11T19:28:09.743\",\n        \"CommerceCustomerId\": null,\n        \"Owner\": \"Commerce\",\n        \"Email\": \"Terry_Emard@example.com\",\n        \"Enabled\": true,\n        \"ShippingAddress\": null,\n        \"BillingAddress\": {\n            \"AddressId\": 375341,\n            \"AddressType\": 1,\n            \"Country\": \"BR\",\n            \"State\": \"SP\",\n            \"AddressDetail\": \"bla bla 10000\",\n            \"PostalCode\": null,\n            \"City\": \"MONTEVIDEO\"\n        },\n        \"Plans\": null,\n        \"AdditionalData\": null,\n        \"PaymentProfiles\": [\n            {\n                \"PaymentProfileId\": 256838,\n                \"PaymentMediaId\": 6,\n                \"Created\": \"2023-09-11T19:28:21.077\",\n                \"LastUpdate\": \"2023-09-11T19:28:21.077\",\n                \"Brand\": \"VISA\",\n                \"CardOwner\": \"Curtis Bartell\",\n                \"Bin\": null,\n                \"IssuerBank\": \"Visa\",\n                \"Installments\": \"1\",\n                \"Type\": \"DebitCard\",\n                \"IdCommerceToken\": 42989,\n                \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                \"Expiration\": \"203002\",\n                \"Last4\": \"6075\",\n                \"Enabled\": true,\n                \"DocumentNumber\": \"False\",\n                \"DocumentTypeId\": 2,\n                \"ExternalValue\": null,\n                \"AffinityGroup\": null\n            }\n        ],\n        \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n        \"UniqueID\": \"UI_2a626079-1bfd-42f3-a0ee-0c1a0fda9037\",\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n        \"FirstName\": \"Webster\",\n        \"LastName\": \"O'Kon\",\n        \"DocNumber\": \"12345672\",\n        \"DocumentTypeId\": 4,\n        \"PhoneNumber\": \"628-991-0615\",\n        \"ExternalValue\": null\n    },\n    \"Errors\": []\n}"
												}
											]
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:30:52 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244024,\n        \"Created\": \"2023-09-11T22:30:46.122\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471444\",\n        \"Transaction\": {\n            \"TransactionID\": 1262913,\n            \"Created\": \"2023-09-11T22:30:46.122\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193051\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252053,\n            \"Created\": \"2023-09-11T22:30:43.460\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Holly45@yahoo.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256839,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:30:43.460\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Carol Bosco\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"203005\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252053\",\n            \"FirstName\": \"Percival\",\n            \"LastName\": \"Lehner\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"940-600-3850\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244024\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256839,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:34:46 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:35:13 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:46.620\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244027,\n                \"Created\": \"2023-09-11T19:35:12.903\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:37:20 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244029,\n        \"Created\": \"2023-09-11T22:37:16.668\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471836\",\n        \"Transaction\": {\n            \"TransactionID\": 1262917,\n            \"Created\": \"2023-09-11T22:37:16.668\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193720\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T22:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Marjorie\",\n            \"LastName\": \"Hickle\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"971-498-1214\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244029\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:42:29 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n            \"FirstName\": \"Kolby\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"466-652-1791\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:43:42 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:29.107\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Elsa\",\n            \"LastName\": \"Torphy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"230-642-2653\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244035,\n                \"Created\": \"2023-09-11T19:43:01.573\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244037,\n                \"Created\": \"2023-09-11T19:43:41.620\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"VISA_DEBIT\", \"4517721004856075\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Mastercard Prisma",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{MASTERCARD_CREDIT}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "02/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "123",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": [
												{
													"name": "getCostumer",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "default"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "default"
															}
														],
														"url": {
															"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"customer",
																"{{costumerId}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Mon, 11 Sep 2023 22:46:26 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Server",
															"value": "nginx/1.19.2"
														},
														{
															"key": "api-supported-versions",
															"value": "1"
														}
													],
													"cookie": [],
													"body": "{\n    \"Response\": {\n        \"CustomerId\": 252059,\n        \"Created\": \"2023-09-11T19:46:04.060\",\n        \"CommerceCustomerId\": null,\n        \"Owner\": \"Commerce\",\n        \"Email\": \"Mckenzie.OKon62@example.org\",\n        \"Enabled\": true,\n        \"ShippingAddress\": null,\n        \"BillingAddress\": {\n            \"AddressId\": 375344,\n            \"AddressType\": 1,\n            \"Country\": \"BR\",\n            \"State\": \"SP\",\n            \"AddressDetail\": \"bla bla 10000\",\n            \"PostalCode\": null,\n            \"City\": \"MONTEVIDEO\"\n        },\n        \"Plans\": null,\n        \"AdditionalData\": null,\n        \"PaymentProfiles\": [\n            {\n                \"PaymentProfileId\": 256845,\n                \"PaymentMediaId\": 2,\n                \"Created\": \"2023-09-11T19:46:17.280\",\n                \"LastUpdate\": \"2023-09-11T19:46:17.280\",\n                \"Brand\": \"MasterCard\",\n                \"CardOwner\": \"Rudolph Ullrich\",\n                \"Bin\": null,\n                \"IssuerBank\": null,\n                \"Installments\": null,\n                \"Type\": \"CreditCard\",\n                \"IdCommerceToken\": 42990,\n                \"Token\": \"CT__OrAdKe_zAiyyaNLK0D4isaCNMabOXXvCXmBplTicgso_\",\n                \"Expiration\": \"203002\",\n                \"Last4\": \"0015\",\n                \"Enabled\": true,\n                \"DocumentNumber\": \"False\",\n                \"DocumentTypeId\": 2,\n                \"ExternalValue\": null,\n                \"AffinityGroup\": null\n            }\n        ],\n        \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n        \"UniqueID\": \"UI_94157ca5-f96d-45fb-897b-7bc1b7064d73\",\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252059\",\n        \"FirstName\": \"Jarod\",\n        \"LastName\": \"Greenholt\",\n        \"DocNumber\": \"12345672\",\n        \"DocumentTypeId\": 4,\n        \"PhoneNumber\": \"447-764-1575\",\n        \"ExternalValue\": null\n    },\n    \"Errors\": []\n}"
												}
											]
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:30:52 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244024,\n        \"Created\": \"2023-09-11T22:30:46.122\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471444\",\n        \"Transaction\": {\n            \"TransactionID\": 1262913,\n            \"Created\": \"2023-09-11T22:30:46.122\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193051\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252053,\n            \"Created\": \"2023-09-11T22:30:43.460\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Holly45@yahoo.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256839,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:30:43.460\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Carol Bosco\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"203005\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252053\",\n            \"FirstName\": \"Percival\",\n            \"LastName\": \"Lehner\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"940-600-3850\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244024\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256839,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:34:46 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:35:13 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:46.620\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244027,\n                \"Created\": \"2023-09-11T19:35:12.903\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:37:20 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244029,\n        \"Created\": \"2023-09-11T22:37:16.668\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471836\",\n        \"Transaction\": {\n            \"TransactionID\": 1262917,\n            \"Created\": \"2023-09-11T22:37:16.668\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193720\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T22:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Marjorie\",\n            \"LastName\": \"Hickle\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"971-498-1214\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244029\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:42:29 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n            \"FirstName\": \"Kolby\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"466-652-1791\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:43:42 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:29.107\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Elsa\",\n            \"LastName\": \"Torphy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"230-642-2653\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244035,\n                \"Created\": \"2023-09-11T19:43:01.573\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244037,\n                \"Created\": \"2023-09-11T19:43:41.620\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"MASTERCARD_CREDIT\", \"5299910010000015\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "AMEX - (DATO TARJETA NO VALIDO)",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{AMEX}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "08/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "1234",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"1234\",\r",
																	"            \"Expiration\": \"08/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":100,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"1234\",\r",
																	"            \"Expiration\": \"08/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:34:46 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:35:13 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:46.620\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244027,\n                \"Created\": \"2023-09-11T19:35:12.903\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:37:20 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244029,\n        \"Created\": \"2023-09-11T22:37:16.668\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471836\",\n        \"Transaction\": {\n            \"TransactionID\": 1262917,\n            \"Created\": \"2023-09-11T22:37:16.668\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193720\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T22:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Marjorie\",\n            \"LastName\": \"Hickle\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"971-498-1214\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244029\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:42:29 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n            \"FirstName\": \"Kolby\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"466-652-1791\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:43:42 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:29.107\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Elsa\",\n            \"LastName\": \"Torphy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"230-642-2653\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244035,\n                \"Created\": \"2023-09-11T19:43:01.573\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244037,\n                \"Created\": \"2023-09-11T19:43:41.620\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"AMEX\", \"373953192351004\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var publicKey = '';",
									"var privateKey = '';",
									"var commerceToken = '';",
									"const DEFAULT_ENVIRONMENT = 'STAGE';",
									"",
									"var environment = pm.environment.get(\"ENVIRONMENT\");",
									"",
									"const ACTUAL_ENVIRONMENT = {",
									"\t'STAGE' : ()=> getKeys('stage'),",
									"\t'DEV'   : ()=> getKeys('dev')",
									"}",
									"",
									"function getKeys(env){",
									"\t//STAGE",
									"\tif (env === 'stage'){",
									"\t\tprivateKey = \"CE-FZfurb8CTzAbWDtuyQw7gZj6XQCQB7RZHq1epyNIPbuOe7uiwsg__\";",
									"\t\tpublicKey = \"ER0eqSEi5abMkJY3BQwbAW_I56ONV7HQ\";",
									"        commerceToken = \"CT__KHiINtt2wOayaNLK0D4isQMZ4vhnAga7rm8GRfupLnI_\";",
									"\t\t    ",
									"\t}",
									"\t//DEV",
									"\tif (env === 'dev'){",
									"\t\tprivateKey = \"u6UBHx6RQM6TzAbWDtuyQwttCB1oJyYwUnnN3B96DIULS9SlRdHYeg__\";",
									"\t\tpublicKey = \"ciJn2hmWOgEhKqgwXr16u2_I56ONV7HQ\";",
									"        commerceToken = \"CT__mapd_rQ1vSbI--7Pyl8U656O4IwFGhYxVQIEkEFzUDY_\";        ",
									"",
									"\t}",
									"",
									"\tpm.collectionVariables.set(\"PRIVATE_KEY\", privateKey);",
									"\tpm.collectionVariables.set(\"PUBLIC_KEY\", publicKey);",
									"    pm.collectionVariables.set(\"PUBLIC_KEY\", publicKey);",
									"",
									"}",
									"",
									"const actualKeys = ACTUAL_ENVIRONMENT[environment]",
									"    ? ACTUAL_ENVIRONMENT[environment]() ",
									"    : ACTUAL_ENVIRONMENT[DEFAULT_ENVIRONMENT]();",
									"",
									"",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Crossborder",
					"item": [
						{
							"name": "Visa Credito",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{VISA_CREDIT}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "02/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "123",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": [
												{
													"name": "getCostumer",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "default"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "default"
															}
														],
														"url": {
															"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"customer",
																"{{costumerId}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Mon, 11 Sep 2023 22:16:57 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Server",
															"value": "nginx/1.19.2"
														},
														{
															"key": "api-supported-versions",
															"value": "1"
														}
													],
													"cookie": [],
													"body": "{\n    \"Response\": {\n        \"CustomerId\": 252045,\n        \"Created\": \"2023-09-11T19:16:38.793\",\n        \"CommerceCustomerId\": null,\n        \"Owner\": \"Commerce\",\n        \"Email\": \"Nichole.Conroy53@example.org\",\n        \"Enabled\": true,\n        \"ShippingAddress\": null,\n        \"BillingAddress\": {\n            \"AddressId\": 375340,\n            \"AddressType\": 1,\n            \"Country\": \"BR\",\n            \"State\": \"SP\",\n            \"AddressDetail\": \"bla bla 10000\",\n            \"PostalCode\": null,\n            \"City\": \"MONTEVIDEO\"\n        },\n        \"Plans\": null,\n        \"AdditionalData\": null,\n        \"PaymentProfiles\": [\n            {\n                \"PaymentProfileId\": 256831,\n                \"PaymentMediaId\": 1,\n                \"Created\": \"2023-09-11T19:16:51.433\",\n                \"LastUpdate\": \"2023-09-11T19:16:51.433\",\n                \"Brand\": \"VISA\",\n                \"CardOwner\": \"Kate Barrows\",\n                \"Bin\": null,\n                \"IssuerBank\": \"Santander\",\n                \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                \"Type\": \"CreditCard\",\n                \"IdCommerceToken\": 42988,\n                \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                \"Expiration\": \"203002\",\n                \"Last4\": \"4905\",\n                \"Enabled\": true,\n                \"DocumentNumber\": \"False\",\n                \"DocumentTypeId\": 2,\n                \"ExternalValue\": null,\n                \"AffinityGroup\": null\n            }\n        ],\n        \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n        \"UniqueID\": \"UI_ab63ae7b-6856-4252-bf7b-736142cae61b\",\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252045\",\n        \"FirstName\": \"Cyrus\",\n        \"LastName\": \"Beer\",\n        \"DocNumber\": \"12345672\",\n        \"DocumentTypeId\": 4,\n        \"PhoneNumber\": \"256-352-0262\",\n        \"ExternalValue\": null\n    },\n    \"Errors\": []\n}"
												}
											]
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Credito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 23:29:29 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 147697,\n        \"Created\": \"2023-09-11T23:29:26.327\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694474966\",\n        \"Transaction\": {\n            \"TransactionID\": 158665,\n            \"Created\": \"2023-09-11T23:29:26.327\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"202928\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 111162240,\n        \"OriginalAmount\": 111162240,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 69612,\n            \"Created\": \"2023-09-11T23:29:25.877\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Queen_Skiles@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 71435,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T23:29:25.877\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Flora Maggio\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.dev.bamboopayment.com/Customer/69612\",\n            \"FirstName\": \"Isidro\",\n            \"LastName\": \"Hegmann\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"745-768-8038\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.dev.bamboopayment.com/Purchase/147697\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 71435,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": {\n            \"TargetCountryISO\": \"AR\",\n            \"TargetCurrencyISO\": \"USD\",\n            \"TargetAmount\": 2000\n        },\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:09:55 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244000,\n        \"Created\": \"2023-09-11T19:09:47.230\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470182\",\n        \"Transaction\": {\n            \"TransactionID\": 1262893,\n            \"Created\": \"2023-09-11T19:09:47.230\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"190949\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.040\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.983\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"190949\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252037,\n            \"Created\": \"2023-09-11T19:09:44.587\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Zora.Green33@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256823,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:09:44.587\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Freddie McCullough\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252037\",\n            \"FirstName\": \"Gayle\",\n            \"LastName\": \"Emmerich\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"855-669-0497\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244000\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256823,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:14:26 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244000,\n        \"Created\": \"2023-09-11T19:09:47.230\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470182\",\n        \"Transaction\": {\n            \"TransactionID\": 1262893,\n            \"Created\": \"2023-09-11T19:09:47.230\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"190949\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.040\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:49.983\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"190949\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:09:54.997\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252037,\n            \"Created\": \"2023-09-11T19:09:44.587\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Zora.Green33@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256823,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:09:44.587\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Freddie McCullough\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252037\",\n            \"FirstName\": \"Gayle\",\n            \"LastName\": \"Emmerich\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"855-669-0497\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244011,\n                \"Created\": \"2023-09-11T19:12:39.103\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244013,\n                \"Created\": \"2023-09-11T19:14:25.593\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244000\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256823,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Credito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:17:49 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244014,\n        \"Created\": \"2023-09-11T22:17:45.803\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470665\",\n        \"Transaction\": {\n            \"TransactionID\": 1262906,\n            \"Created\": \"2023-09-11T22:17:45.803\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191748\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T22:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Meagan\",\n            \"LastName\": \"Harris\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"808-692-8622\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244014\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:19:35 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252045\",\n            \"FirstName\": \"Marian\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"288-546-0667\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:21:17 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:24:36 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Chester\",\n            \"LastName\": \"Toy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"537-425-7021\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244023,\n                \"Created\": \"2023-09-11T19:24:35.943\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"VISA_CREDIT\", \"4507990000004905\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Visa Debito",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{VISA_DEBIT}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "02/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "123",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": [
												{
													"name": "getCostumer",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "default"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "default"
															}
														],
														"url": {
															"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"customer",
																"{{costumerId}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Mon, 11 Sep 2023 22:28:29 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Server",
															"value": "nginx/1.19.2"
														},
														{
															"key": "api-supported-versions",
															"value": "1"
														}
													],
													"cookie": [],
													"body": "{\n    \"Response\": {\n        \"CustomerId\": 252052,\n        \"Created\": \"2023-09-11T19:28:09.743\",\n        \"CommerceCustomerId\": null,\n        \"Owner\": \"Commerce\",\n        \"Email\": \"Terry_Emard@example.com\",\n        \"Enabled\": true,\n        \"ShippingAddress\": null,\n        \"BillingAddress\": {\n            \"AddressId\": 375341,\n            \"AddressType\": 1,\n            \"Country\": \"BR\",\n            \"State\": \"SP\",\n            \"AddressDetail\": \"bla bla 10000\",\n            \"PostalCode\": null,\n            \"City\": \"MONTEVIDEO\"\n        },\n        \"Plans\": null,\n        \"AdditionalData\": null,\n        \"PaymentProfiles\": [\n            {\n                \"PaymentProfileId\": 256838,\n                \"PaymentMediaId\": 6,\n                \"Created\": \"2023-09-11T19:28:21.077\",\n                \"LastUpdate\": \"2023-09-11T19:28:21.077\",\n                \"Brand\": \"VISA\",\n                \"CardOwner\": \"Curtis Bartell\",\n                \"Bin\": null,\n                \"IssuerBank\": \"Visa\",\n                \"Installments\": \"1\",\n                \"Type\": \"DebitCard\",\n                \"IdCommerceToken\": 42989,\n                \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                \"Expiration\": \"203002\",\n                \"Last4\": \"6075\",\n                \"Enabled\": true,\n                \"DocumentNumber\": \"False\",\n                \"DocumentTypeId\": 2,\n                \"ExternalValue\": null,\n                \"AffinityGroup\": null\n            }\n        ],\n        \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n        \"UniqueID\": \"UI_2a626079-1bfd-42f3-a0ee-0c1a0fda9037\",\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n        \"FirstName\": \"Webster\",\n        \"LastName\": \"O'Kon\",\n        \"DocNumber\": \"12345672\",\n        \"DocumentTypeId\": 4,\n        \"PhoneNumber\": \"628-991-0615\",\n        \"ExternalValue\": null\n    },\n    \"Errors\": []\n}"
												}
											]
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:30:52 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244024,\n        \"Created\": \"2023-09-11T22:30:46.122\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471444\",\n        \"Transaction\": {\n            \"TransactionID\": 1262913,\n            \"Created\": \"2023-09-11T22:30:46.122\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193051\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252053,\n            \"Created\": \"2023-09-11T22:30:43.460\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Holly45@yahoo.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256839,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:30:43.460\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Carol Bosco\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"203005\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252053\",\n            \"FirstName\": \"Percival\",\n            \"LastName\": \"Lehner\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"940-600-3850\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244024\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256839,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n    \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:34:46 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"VISA_DEBIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:35:13 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:46.620\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244027,\n                \"Created\": \"2023-09-11T19:35:12.903\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:37:20 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244029,\n        \"Created\": \"2023-09-11T22:37:16.668\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471836\",\n        \"Transaction\": {\n            \"TransactionID\": 1262917,\n            \"Created\": \"2023-09-11T22:37:16.668\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193720\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T22:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Marjorie\",\n            \"LastName\": \"Hickle\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"971-498-1214\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244029\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:42:29 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n            \"FirstName\": \"Kolby\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"466-652-1791\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Visa Debito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:43:42 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:29.107\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Elsa\",\n            \"LastName\": \"Torphy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"230-642-2653\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244035,\n                \"Created\": \"2023-09-11T19:43:01.573\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244037,\n                \"Created\": \"2023-09-11T19:43:41.620\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"VISA_DEBIT\", \"4517721004856075\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Mastercard Prisma",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{MASTERCARD_CREDIT}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "02/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "123",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": [
												{
													"name": "getCostumer",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "default"
															},
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "default"
															}
														],
														"url": {
															"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"customer",
																"{{costumerId}}"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Date",
															"value": "Mon, 11 Sep 2023 22:46:26 GMT"
														},
														{
															"key": "Content-Type",
															"value": "application/json; charset=utf-8"
														},
														{
															"key": "Transfer-Encoding",
															"value": "chunked"
														},
														{
															"key": "Connection",
															"value": "keep-alive"
														},
														{
															"key": "Server",
															"value": "nginx/1.19.2"
														},
														{
															"key": "api-supported-versions",
															"value": "1"
														}
													],
													"cookie": [],
													"body": "{\n    \"Response\": {\n        \"CustomerId\": 252059,\n        \"Created\": \"2023-09-11T19:46:04.060\",\n        \"CommerceCustomerId\": null,\n        \"Owner\": \"Commerce\",\n        \"Email\": \"Mckenzie.OKon62@example.org\",\n        \"Enabled\": true,\n        \"ShippingAddress\": null,\n        \"BillingAddress\": {\n            \"AddressId\": 375344,\n            \"AddressType\": 1,\n            \"Country\": \"BR\",\n            \"State\": \"SP\",\n            \"AddressDetail\": \"bla bla 10000\",\n            \"PostalCode\": null,\n            \"City\": \"MONTEVIDEO\"\n        },\n        \"Plans\": null,\n        \"AdditionalData\": null,\n        \"PaymentProfiles\": [\n            {\n                \"PaymentProfileId\": 256845,\n                \"PaymentMediaId\": 2,\n                \"Created\": \"2023-09-11T19:46:17.280\",\n                \"LastUpdate\": \"2023-09-11T19:46:17.280\",\n                \"Brand\": \"MasterCard\",\n                \"CardOwner\": \"Rudolph Ullrich\",\n                \"Bin\": null,\n                \"IssuerBank\": null,\n                \"Installments\": null,\n                \"Type\": \"CreditCard\",\n                \"IdCommerceToken\": 42990,\n                \"Token\": \"CT__OrAdKe_zAiyyaNLK0D4isaCNMabOXXvCXmBplTicgso_\",\n                \"Expiration\": \"203002\",\n                \"Last4\": \"0015\",\n                \"Enabled\": true,\n                \"DocumentNumber\": \"False\",\n                \"DocumentTypeId\": 2,\n                \"ExternalValue\": null,\n                \"AffinityGroup\": null\n            }\n        ],\n        \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n        \"UniqueID\": \"UI_94157ca5-f96d-45fb-897b-7bc1b7064d73\",\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252059\",\n        \"FirstName\": \"Jarod\",\n        \"LastName\": \"Greenholt\",\n        \"DocNumber\": \"12345672\",\n        \"DocumentTypeId\": 4,\n        \"PhoneNumber\": \"447-764-1575\",\n        \"ExternalValue\": null\n    },\n    \"Errors\": []\n}"
												}
											]
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:30:52 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244024,\n        \"Created\": \"2023-09-11T22:30:46.122\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471444\",\n        \"Transaction\": {\n            \"TransactionID\": 1262913,\n            \"Created\": \"2023-09-11T22:30:46.122\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193051\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252053,\n            \"Created\": \"2023-09-11T22:30:43.460\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Holly45@yahoo.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256839,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:30:43.460\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Carol Bosco\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"203005\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252053\",\n            \"FirstName\": \"Percival\",\n            \"LastName\": \"Lehner\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"940-600-3850\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244024\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256839,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:34:46 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"MASTERCARD_CREDIT\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:35:13 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:46.620\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244027,\n                \"Created\": \"2023-09-11T19:35:12.903\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:37:20 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244029,\n        \"Created\": \"2023-09-11T22:37:16.668\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471836\",\n        \"Transaction\": {\n            \"TransactionID\": 1262917,\n            \"Created\": \"2023-09-11T22:37:16.668\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193720\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T22:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Marjorie\",\n            \"LastName\": \"Hickle\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"971-498-1214\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244029\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:42:29 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n            \"FirstName\": \"Kolby\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"466-652-1791\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - Mastercard Credito",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:43:42 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:29.107\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Elsa\",\n            \"LastName\": \"Torphy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"230-642-2653\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244035,\n                \"Created\": \"2023-09-11T19:43:01.573\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244037,\n                \"Created\": \"2023-09-11T19:43:41.620\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"MASTERCARD_CREDIT\", \"5299910010000015\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "AMEX - (DATO TARJETA NO VALIDO)",
							"item": [
								{
									"name": "Registry",
									"item": [
										{
											"name": "CreateCostumer",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"//console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"//console.log(pm.variables.get('costumerId'));"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"Email\": \"{{$randomExampleEmail}}\",\r\n    \"FirstName\": \"{{$randomFirstName}}\",\r\n    \"LastName\": \"{{$randomLastName}}\",\r\n    \"DocNumber\": \"12345672\",\r\n\t\"DocumentTypeId\": 4,\r\n    \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n    \"BillingAddress\": {\r\n        \"AddressType\": 1,\r\n        \"Country\": \"BR\",\r\n        \"State\": \"SP\",\r\n        \"City\": \"MONTEVIDEO\",\r\n        \"AddressDetail\": \"bla bla 10000\"\r\n    }\r\n}"
												},
												"url": {
													"raw": "{{URL}}/v1/api/Customer",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"Customer"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "addCard",
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "Titular",
															"value": "{{$randomFullName}}",
															"type": "default"
														},
														{
															"key": "Email",
															"value": "{{$randomEmail}}",
															"type": "default"
														},
														{
															"key": "pan",
															"value": "{{AMEX}}",
															"type": "default"
														},
														{
															"key": "Expiration",
															"value": "08/30",
															"type": "default"
														},
														{
															"key": "CVV",
															"value": "1234",
															"type": "default"
														},
														{
															"key": "Document",
															"value": "False",
															"type": "default"
														},
														{
															"key": "CrossBorderData[TargetCountryISO]",
															"value": "UY",
															"type": "default",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null",
													"host": [
														"{{URLSiemprePago}}{{SESSION_ID}}{{uniqueId}}&key={{PUBLIC_KEY}}&amount=1000&currency=undefined&paymentProfileId=undefined&paymentMediaId=null&issuerBank=null&paymentMediaType=null"
													]
												}
											},
											"response": []
										},
										{
											"name": "getCostumer",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"bodyData = JSON.parse(responseBody);\r",
															"\r",
															"uniqueId = bodyData.Response.UniqueID;\r",
															"pm.environment.set(\"uniqueId\", uniqueId);\r",
															"console.log(pm.variables.get('uniqueId'));\r",
															"\r",
															"costumerId = bodyData.Response.CustomerId;\r",
															"pm.environment.set(\"costumerId\", costumerId);\r",
															"console.log(pm.variables.get('costumerId'));\r",
															"\r",
															"cardToken = bodyData.Response.PaymentProfiles[bodyData.Response.PaymentProfiles.length-1].Token;\r",
															"pm.environment.set(\"cardToken\", cardToken);\r",
															"console.log(pm.variables.get('cardToken'));\r",
															"\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Basic {{PRIVATE_KEY}}",
														"type": "default"
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "default"
													}
												],
												"url": {
													"raw": "{{URL}}/v1/api/customer/{{costumerId}}",
													"host": [
														"{{URL}}"
													],
													"path": [
														"v1",
														"api",
														"customer",
														"{{costumerId}}"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "With CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"1234\",\r",
																	"            \"Expiration\": \"08/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":100,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"1234\",\r",
																	"            \"Expiration\": \"08/30\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:34:46 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:22:38 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244015,\n        \"Created\": \"2023-09-11T19:19:22.130\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694470761\",\n        \"Transaction\": {\n            \"TransactionID\": 1262907,\n            \"Created\": \"2023-09-11T19:19:22.130\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"191926\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:25.107\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:26.490\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"191926\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:19:34.793\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252045,\n            \"Created\": \"2023-09-11T19:16:38.793\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Nichole.Conroy53@example.org\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375340,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256831,\n                    \"PaymentMediaId\": 1,\n                    \"Created\": \"2023-09-11T22:16:51.433\",\n                    \"LastUpdate\": \"2023-09-11T22:16:51.433\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Kate Barrows\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Santander\",\n                    \"Installments\": \"1;2;3;4;5;6;7;8;9;10;11;12\",\n                    \"Type\": \"CreditCard\",\n                    \"IdCommerceToken\": 42988,\n                    \"Token\": \"CT__GXqh2zz_twuyaNLK0D4isUTa2hx6UqSt4W5XYUgP7H8_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"4905\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252045\",\n            \"FirstName\": \"Neha\",\n            \"LastName\": \"Lynch\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"259-608-4857\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244017,\n                \"Created\": \"2023-09-11T19:20:27.190\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244019,\n                \"Created\": \"2023-09-11T19:21:17.290\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244021,\n                \"Created\": \"2023-09-11T19:22:37.873\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244015\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256831,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	"const requestConfig = {\r",
																	"    url: pm.variables.get(\"URLSiemprePago\") + pm.variables.get(\"tokenizadorPath\") + pm.variables.get(\"PUBLIC_KEY\"),\r",
																	"    method: \"POST\",\r",
																	"    header: \"Content-Type: application/json\",\r",
																	"    body: {\r",
																	"        mode: \"raw\",\r",
																	"        raw: JSON.stringify({\r",
																	"            \"Email\": pm.variables.replaceIn(\"{{$randomEmail}}\"),\r",
																	"            \"Pan\": pm.variables.get(\"AMEX\"),\r",
																	"            \"CVV\": \"123\",\r",
																	"            \"Expiration\": \"05/24\",\r",
																	"            \"Titular\": pm.variables.replaceIn(\"{{$randomFullName}}\")\r",
																	"        })\r",
																	"    }\r",
																	"};\r",
																	"\r",
																	"pm.sendRequest(requestConfig, (error, response) => {\r",
																	"    if (error) {\r",
																	"        console.error(error);\r",
																	"    } else {\r",
																	"        const responseBody = JSON.parse(response.text());\r",
																	"\t\ttokenId = responseBody.TokenId;\r",
																	"        pm.environment.set(\"TOKEN_ID\", tokenId);\r",
																	"    }\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"{{TOKEN_ID}}\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:35:13 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244025,\n        \"Created\": \"2023-09-11T19:34:29.053\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471668\",\n        \"Transaction\": {\n            \"TransactionID\": 1262914,\n            \"Created\": \"2023-09-11T19:34:29.053\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"193432\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:31.460\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:32.743\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193432\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:34:46.620\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252054,\n            \"Created\": \"2023-09-11T19:34:27.920\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Anonymous\",\n            \"Email\": \"Kenneth26@gmail.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": null,\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256840,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:34:27.920\",\n                    \"LastUpdate\": null,\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Lionel Cremin\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 0,\n                    \"Token\": null,\n                    \"Expiration\": \"202405\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": null,\n                    \"DocumentNumber\": null,\n                    \"DocumentTypeId\": null,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": null,\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252054\",\n            \"FirstName\": \"Lexie\",\n            \"LastName\": \"Larson\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"397-620-2740\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244027,\n                \"Created\": \"2023-09-11T19:35:12.903\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244025\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256840,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "Without CVV",
									"item": [
										{
											"name": "Authorize",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": [
														{
															"name": "Purchase - Visa Debito",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json",
																		"type": "text"
																	},
																	{
																		"key": "Authorization",
																		"value": "Basic {{PRIVATE_KEY}}",
																		"type": "text"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"ARS\",\r\n    \"Installments\":1,\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		""
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:37:20 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244029,\n        \"Created\": \"2023-09-11T22:37:16.668\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694471836\",\n        \"Transaction\": {\n            \"TransactionID\": 1262917,\n            \"Created\": \"2023-09-11T22:37:16.668\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 1,\n            \"Status\": \"Approved\",\n            \"ErrorCode\": null,\n            \"Description\": \" \",\n            \"ApprovalCode\": null,\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"193720\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": true,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T22:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Marjorie\",\n            \"LastName\": \"Hickle\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"971-498-1214\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244029\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": null,\n        \"MetadataOut\": null,\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": {\n            \"AntifraudFingerprintId\": null,\n            \"AntifraudMetadataIn\": null\n        },\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Commit (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Commit Partial (Faltan Credenciales)",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Commit",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/commit",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"commit"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Rollback",
											"item": [
												{
													"name": "Purchase Preauth - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('PreAuthorized');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"bodyData = JSON.parse(responseBody);\r",
																	"\r",
																	"purchaseId = bodyData.Response.PurchaseId;\r",
																	"pm.environment.set(\"purchaseId\", purchaseId);\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"false\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Rollback",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"purchase",
																"{{purchaseId}}",
																"rollback"
															]
														}
													},
													"response": [
														{
															"name": "Rollback",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n\t\"PurchaseID\": {{purchaseId}}\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/purchase/{{purchaseId}}/rollback",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"purchase",
																		"{{purchaseId}}",
																		"rollback"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:42:29 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"\",\n                    \"Status\": null,\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/api/Customer/252052\",\n            \"FirstName\": \"Kolby\",\n            \"LastName\": \"Leffler\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"466-652-1791\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": null,\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/api/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										},
										{
											"name": "Refund",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": []
												}
											]
										},
										{
											"name": "Refund Partial",
											"item": [
												{
													"name": "Purchase - AMEX",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"\r",
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Approved');\r",
																	"\r",
																	"});\r",
																	"\r",
																	"\r",
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"value": "Basic {{PRIVATE_KEY}}",
																"type": "text"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n    \"TrxToken\":\"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\r\n    \"Order\":\"QA-{{$timestamp}}\",\r\n    \"Capture\":\"true\",\r\n    \"Amount\":200000,\r\n    \"Currency\":\"USD\",\r\n    \"Installments\":1,\r\n    \"CrossBorderData\" : {\r\n    \"TargetCountryISO\" : \"AR\"\r\n    },\r\n     \"Customer\" : {\r\n        \"Email\": \"{{$randomEmail}}\",\r\n        \"FirstName\" : \"{{$randomFirstName}}\",\r\n        \"LastName\" : \"{{$randomLastName}}\",\r\n        \"PhoneNumber\": \"{{$randomPhoneNumber}}\",\r\n        \"DocumentTypeId\" : 4,\r\n        \"DocNumber\" : \"12345678\"\r\n    },\r\n    \"Description\" : \"Compra de prueba\"\r\n}\r\n",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																""
															]
														}
													},
													"response": []
												},
												{
													"name": "Refund",
													"event": [
														{
															"listen": "test",
															"script": {
																"exec": [
																	"pm.test(\"Status code is 200\", () => {\r",
																	"  pm.expect(pm.response.code).to.eql(200);\r",
																	"});\r",
																	"\r",
																	"\r",
																	"pm.test(\"The response has all properties\", () => {\r",
																	"    const responseJson = pm.response.json();\r",
																	"    pm.expect(responseJson.Response.Transaction.Status).to.eql('Cancelled');\r",
																	"\r",
																	"});"
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Basic  {{PRIVATE_KEY}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n   \"Amount\": 180000\r\n}"
														},
														"url": {
															"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
															"host": [
																"{{URL}}"
															],
															"path": [
																"v1",
																"api",
																"Purchase",
																"{{purchaseId}}",
																"refund"
															]
														}
													},
													"response": [
														{
															"name": "Refund",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"type": "text",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"type": "text",
																		"value": "Basic  {{PRIVATE_KEY}}"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\r\n   \"Amount\": 180000\r\n}"
																},
																"url": {
																	"raw": "{{URL}}/v1/api/Purchase/{{purchaseId}}/refund",
																	"host": [
																		"{{URL}}"
																	],
																	"path": [
																		"v1",
																		"api",
																		"Purchase",
																		"{{purchaseId}}",
																		"refund"
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Date",
																	"value": "Mon, 11 Sep 2023 22:43:42 GMT"
																},
																{
																	"key": "Content-Type",
																	"value": "application/json; charset=utf-8"
																},
																{
																	"key": "Transfer-Encoding",
																	"value": "chunked"
																},
																{
																	"key": "Connection",
																	"value": "keep-alive"
																},
																{
																	"key": "Server",
																	"value": "nginx/1.19.2"
																},
																{
																	"key": "api-supported-versions",
																	"value": "1, 2"
																}
															],
															"cookie": [],
															"body": "{\n    \"Response\": {\n        \"PurchaseId\": 1244033,\n        \"Created\": \"2023-09-11T19:42:10.453\",\n        \"TrxToken\": null,\n        \"Order\": \"QA-1694472130\",\n        \"Transaction\": {\n            \"TransactionID\": 1262921,\n            \"Created\": \"2023-09-11T19:42:10.453\",\n            \"AuthorizationDate\": \"\",\n            \"TransactionStatusId\": 6,\n            \"Status\": \"Cancelled\",\n            \"ErrorCode\": null,\n            \"Description\": \"approved approved\",\n            \"ApprovalCode\": \"194213\",\n            \"Steps\": [\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:11.957\",\n                    \"Status\": \"Antifraud Approved\",\n                    \"ResponseCode\": null,\n                    \"ResponseMessage\": null,\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:13.313\",\n                    \"Status\": \"Pre-authorizacion OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": \"194213\",\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                },\n                {\n                    \"Step\": \"Generic External\",\n                    \"Created\": \"2023-09-11T19:42:29.107\",\n                    \"Status\": \"Rollback OK\",\n                    \"ResponseCode\": \"approved\",\n                    \"ResponseMessage\": \"approved\",\n                    \"Error\": null,\n                    \"AuthorizationCode\": null,\n                    \"UniqueID\": null,\n                    \"AcquirerResponseDetail\": null\n                }\n            ]\n        },\n        \"Capture\": false,\n        \"Amount\": 200000,\n        \"OriginalAmount\": 200000,\n        \"TaxableAmount\": 0,\n        \"Tip\": 0,\n        \"Installments\": 1,\n        \"Currency\": \"ARS\",\n        \"Description\": \"Compra de prueba\",\n        \"Customer\": {\n            \"CustomerId\": 252052,\n            \"Created\": \"2023-09-11T19:28:09.743\",\n            \"CommerceCustomerId\": null,\n            \"Owner\": \"Commerce\",\n            \"Email\": \"Terry_Emard@example.com\",\n            \"Enabled\": true,\n            \"ShippingAddress\": null,\n            \"BillingAddress\": {\n                \"AddressId\": 375341,\n                \"AddressType\": 1,\n                \"Country\": \"BR\",\n                \"State\": \"SP\",\n                \"AddressDetail\": \"bla bla 10000\",\n                \"PostalCode\": null,\n                \"City\": \"MONTEVIDEO\"\n            },\n            \"Plans\": null,\n            \"AdditionalData\": null,\n            \"PaymentProfiles\": [\n                {\n                    \"PaymentProfileId\": 256838,\n                    \"PaymentMediaId\": 6,\n                    \"Created\": \"2023-09-11T22:28:21.077\",\n                    \"LastUpdate\": \"2023-09-11T22:28:21.077\",\n                    \"Brand\": \"VISA\",\n                    \"CardOwner\": \"Curtis Bartell\",\n                    \"Bin\": null,\n                    \"IssuerBank\": \"Visa\",\n                    \"Installments\": \"1\",\n                    \"Type\": \"DebitCard\",\n                    \"IdCommerceToken\": 42989,\n                    \"Token\": \"CT__f5Lf14BXCveyaNLK0D4isTjN3-W3uDgX6WBT5JfDJDc_\",\n                    \"Expiration\": \"203002\",\n                    \"Last4\": \"6075\",\n                    \"Enabled\": true,\n                    \"DocumentNumber\": \"False\",\n                    \"DocumentTypeId\": 2,\n                    \"ExternalValue\": null,\n                    \"AffinityGroup\": null\n                }\n            ],\n            \"CaptureURL\": \"https://api.stage.bamboopayment.com/v1/Capture/\",\n            \"UniqueID\": null,\n            \"URL\": \"https://api.stage.bamboopayment.com/Customer/252052\",\n            \"FirstName\": \"Elsa\",\n            \"LastName\": \"Torphy\",\n            \"DocNumber\": \"12345678\",\n            \"DocumentTypeId\": 4,\n            \"PhoneNumber\": \"230-642-2653\",\n            \"ExternalValue\": null\n        },\n        \"RefundList\": [\n            {\n                \"PurchaseRefundId\": 1244035,\n                \"Created\": \"2023-09-11T19:43:01.573\",\n                \"UniqueID\": null,\n                \"Amount\": 200000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            },\n            {\n                \"PurchaseRefundId\": 1244037,\n                \"Created\": \"2023-09-11T19:43:41.620\",\n                \"UniqueID\": null,\n                \"Amount\": 180000,\n                \"Currency\": \"ARS\",\n                \"Status\": \"Rejected\"\n            }\n        ],\n        \"PlanID\": null,\n        \"UniqueID\": null,\n        \"AdditionalData\": null,\n        \"CustomerUserAgent\": null,\n        \"CustomerIP\": null,\n        \"URL\": \"https://api.stage.bamboopayment.com/Purchase/1244033\",\n        \"DataUY\": {\n            \"IsFinalConsumer\": false,\n            \"Invoice\": null,\n            \"TaxableAmount\": 0\n        },\n        \"DataDO\": {\n            \"Invoice\": null,\n            \"Tax\": 0\n        },\n        \"Acquirer\": {\n            \"AcquirerID\": 25,\n            \"Name\": \"DECIDIR\",\n            \"CommerceNumber\": null\n        },\n        \"CommerceAction\": null,\n        \"PurchasePaymentProfileId\": 256838,\n        \"LoyaltyPlan\": null,\n        \"DeviceFingerprintId\": null,\n        \"MetadataIn\": {},\n        \"MetadataOut\": {},\n        \"CrossBorderData\": null,\n        \"CrossBorderDataResponse\": null,\n        \"Redirection\": null,\n        \"IsFirstRecurrentPurchase\": false,\n        \"AntifraudData\": null,\n        \"PaymentMediaId\": null,\n        \"PurchaseType\": 1,\n        \"HasCvv\": null,\n        \"TargetCountryISO\": null\n    },\n    \"Errors\": []\n}"
														}
													]
												}
											]
										}
									]
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"AMEX\", \"373953192351004\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var publicKey = '';",
									"var privateKey = '';",
									"const DEFAULT_ENVIRONMENT = 'STAGE';",
									"",
									"var environment = pm.environment.get(\"ENVIRONMENT\");",
									"",
									"const ACTUAL_ENVIRONMENT = {",
									"\t'STAGE' : ()=> getKeys('stage'),",
									"\t'DEV'   : ()=> getKeys('dev')",
									"}",
									"",
									"function getKeys(env){",
									"\t//STAGE",
									"\tif (env === 'stage'){",
									"\t\tprivateKey = \"G8KNdp8s8KaTzAbWDtuyQzyeBRvvawzhm7yRWlJU9jKGBsgCZjKNYg__\";",
									"\t\tpublicKey = \"5fD_0pRdYhYbABQWoV8c9m_I56ONV7HQ\";",
									"        commerceToken = \"CT__ICe4IgM2BseyaNLK0D4isXff3ZsWNj3FIKp_U489iyw_\";",
									"",
									"\t}",
									"\t//DEV",
									"\tif (env === 'dev'){",
									"\t\tprivateKey = \"jcuvtJ-JYdKTzAbWDtuyQ3lzgHEZqHU7Y_4Zylj4G96W7wko3gfzHQ__\";",
									"\t\tpublicKey = \"FnZSjVQObvvroU1bPwHmtG_I56ONV7HQ\";        ",
									"        commerceToken = \"CT__LhRj79fUF_nI--7Pyl8U63yHdOxd7DqC91GaPL4esig_\";",
									"\t}",
									"",
									"\tpm.collectionVariables.set(\"PRIVATE_KEY\", privateKey);",
									"\tpm.collectionVariables.set(\"PUBLIC_KEY\", publicKey);",
									"",
									"}",
									"",
									"const actualKeys = ACTUAL_ENVIRONMENT[environment]",
									"    ? ACTUAL_ENVIRONMENT[environment]() ",
									"    : ACTUAL_ENVIRONMENT[DEFAULT_ENVIRONMENT]();",
									"",
									"",
									"",
									"//ARGDecidirCrossStage",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "PRIVATE_KEY",
			"value": ""
		},
		{
			"key": "PUBLIC_KEY",
			"value": ""
		}
	]
}